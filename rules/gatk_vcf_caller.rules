# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


def _gatk_multi_arg(flag, files):
    flag += " "
    return " ".join(flag + f for f in files)



rule gatk_HaplotypeCaller_ERC_GVCF:
    input:    
        bam="reads/recalibrated/{sample}.dedup.recal.bam"
    output:
        gvcf="variant_calling/{sample}.g.vcf.gz"
    conda:
       "../envs/gatk.yaml"
    params:
        custom=java_params(tmp_dir=config.get("paths").get("to_tmp"), multiply_by=5),
        intervals = lambda wildcards: resolve_single_filepath(*references_abs_path(), config.get("intervals").get(config.get("samples_intervals").get(wildcards.sample, config["intervals_default"])).get("bedTarget")),
        genome=resolve_single_filepath(*references_abs_path(), config.get("genome_fasta"))
    log:
        "logs/gatk/HaplotypeCaller/{sample}.genotype_info.log"
    benchmark:
        "benchmarks/gatk/HaplotypeCaller/{sample}.txt"
    threads: 2
    shell:
        "gatk HaplotypeCaller --java-options {params.custom} "
        "-R {params.genome} "
        "-I {input.bam} "
        "-O {output.gvcf} "
        "-ERC GVCF "
        "-L {params.intervals} "
        "-ip 200 "
        "-G StandardAnnotation "
        "--use-new-qual-calculator "
        ">& {log}"
##############

rule gatk_GenomicsDBImport:
    input:
        gvcfs=expand("variant_calling/{sample.sample}.g.vcf.gz",
                     sample=samples.reset_index().itertuples())
    output:
        touch("db/imports/pippo")

    params:
        custom=java_params(tmp_dir=config.get("paths").get("to_tmp"),
                           multiply_by=2),
        intervals = config.get("intervals").get(config.get("intervals_default")).get("bedTarget"),
        genome=resolve_single_filepath(*references_abs_path(), config.get("genome_fasta"))
    log:
        "logs/gatk/GenomicsDBImport/genomicsdbi.info.log"
    benchmark:
        "benchmarks/gatk/GenomicsDBImport/genomicsdbi.txt"
    run:
        gvcfs = _multi_flag("-V", input.gvcfs)
        shell(
            "mkdir -p db; "
            "gatk GenomicsDBImport --java-options {params.custom} "
            "{gvcfs} "
            "--genomicsdb-workspace-path db "
            "-L {params.intervals} "
            "-ip 200 "
            ">& {log} ")



####
rule gatk_GenotypeGVCFs:
    input:
        "db/imports/pippo"
    output:
        protected("variant_calling/all.vcf.gz")
    # wildcard_constraints:
    #     chr="[0-9XYM]+"
    conda:
       "../envs/gatk.yaml"
    params:
        custom=java_params(tmp_dir=config.get("paths").get("to_tmp"),
                           multiply_by=2),
        genome=resolve_single_filepath(*references_abs_path(), config.get("genome_fasta")),
        dbsnp=resolve_single_filepath(*references_abs_path(), config.get("known_variants").get("dbsnp"))
    log:
        "logs/gatk/GenotypeGVCFs/all.info.log"
    benchmark:
        "benchmarks/gatk/GenotypeGVCFs/all.txt"
    shell:
        "gatk GenotypeGVCFs --java-options {params.custom} "
        "-R {params.genome} "
        "-V gendb://db "
        "-G StandardAnnotation "
        "--use-new-qual-calculator "
        "-O {output} "
        "--dbsnp {params.dbsnp} "
        ">& {log} "