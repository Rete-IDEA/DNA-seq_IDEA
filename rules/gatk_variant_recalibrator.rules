# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


"""
GATK variant recalibration as described in

Needs at least GATK 3.0, available in your PATH as "gatk".

For usage, include this in your workflow.

Expects a global variable config
(see https://bitbucket.org/johanneskoester/snakemake/wiki/Documentation#markdown-header-configuration)
of at least the
following structure, assuming that the desired reference sequence is some genome
to be found under the given path.

{
    "references": {
        "genome": "path/to/genome.fasta"
    },
    "known_variants": {
        "dbsnp": "path/to/dbsnp.vcf",
        "hapmap": "path/to/hapmap_3.3.vcf",
        "g1k": "path/to/1000G_phase1.snps.high_confidence.vcf",
        "omni": "path/to/1000G_omni2.5.vcf",
        "mills": "path/to/Mills_and_1000G_gold_standard.indels.vcf"
    }
}
"""


__author__ = "Johannes KÃ¶ster (http://johanneskoester.bitbucket.org)"
__license__ = "MIT"

# https://docs.python.org/dev/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations
def _get_recal_params(wildcards):
    known_variants = resolve_multi_filepath(*references_abs_path(), config["known_variants"])
    if wildcards.type == "snp":
        return (
            "-mode SNP -an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR "
            "-resource:hapmap,known=false,training=true,truth=true,prior=15.0 {hapmap} "
            "-resource:omni,known=false,training=true,truth=true,prior=12.0 {omni} "
            "-resource:1000G,known=false,training=true,truth=false,prior=10.0 {g1k} "
            "-resource:dbsnp,known=true,training=false,truth=false,prior=2.0 {dbsnp}"
        ).format(**known_variants)
    else:
        return (
            "-mode INDEL -an QD -an FS -an SOR -an MQRankSum -an ReadPosRankSum "
            "--maxGaussians 4 "
            "-resource:mills,known=false,training=true,truth=true,prior=12.0 {mills} "
            "-resource:dbsnp,known=true,training=false,truth=false,prior=2.0 {dbsnp}"
        ).format(**known_variants)


rule gatk_VariantRecalibrator:
    input:
        resolve_multi_filepath(*references_abs_path(), config["known_variants"]).values(),
        vcf="variant_calling/{prefix}.vcf"
    output:
        recal=temp("variant_calling/{prefix}.{type,(snp|indel)}.recal"),
        tranches=temp("variant_calling/{prefix}.{type,(snp|indel)}.tranches"),
        plotting=temp("variant_calling/{prefix}.{type,(snp|indel)}.plotting.R")
    params:
        recal=_get_recal_params,
        gatk=java_params(tmp_dir=config.get("tmp_dir")),
        genome=resolve_single_filepath(*references_abs_path(), config.get("genome_fasta"))
    log:
        "variant_calling/log/{prefix}.{type}_recalibrate_info.log"
    threads: 8
    shell:
        "gatk -T VariantRecalibrator -R {params.genome} "
        "-input {input.vcf} "
        "{params.gatk} {params.recal} -nt {threads} "
        "-tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 90.0 "
        "-recalFile {output.recal} "
        "-tranchesFile {output.tranches} "
        "-rscriptFile {output.plotting} >& {log}"
      

rule gatk_ApplyRecalibration:
    input:
        vcf="variant_calling/{prefix}.vcf",
        recal="variant_calling/{prefix}.{type}.recal",
        tranches="variant_calling/{prefix}.{type}.tranches"
    output:
        "variant_calling/{prefix}.{type,(snp|indel)}_recalibrated.vcf"
    params:
        mode=lambda wildcards: wildcards.type.upper(),
        custom=java_params(tmp_dir=config.get("tmp_dir")),
        genome=resolve_single_filepath(*references_abs_path(), config.get("genome_fasta"))
    log:
        "variant_calling/log/{prefix}.{type}_recalibrate.log"
    threads: 8
    shell:
        "gatk -T ApplyRecalibration -R {params.genome} -nt {threads} "
        "-input {input.vcf} -mode {params.mode} {params.custom} "
        "-recalFile {input.recal} --ts_filter_level 99.0 "
        "-tranchesFile {input.tranches} -o {output} >& {log}"

rule gatk_VariantEval:
    input:
        "variant_calling/all.snp_recalibrated.indel_recalibrated.vcf"
    output:
        "all.snp_recalibrated.indel_recalibrated.gatkreport"
    params:
        custom=java_params(tmp_dir=config.get("tmp_dir")),
        genome=resolve_single_filepath(*references_abs_path(), config.get("genome_fasta")),
        dbsnp=resolve_single_filepath(*references_abs_path(), config.get("known_variants").get("dbsnp")),
    shell:
        "gatk {params.custom} -T VariantEval -R {params.genome} -nt {threads} "
        "-o {output} -eval {input} --dbsnp {params.dbsnp} "
        "-noEV -EV CompOverlap -EV IndelSummary -EV TiTvVariantEvaluator -EV CountVariants -EV MultiallelicSummary -ST Sample "
